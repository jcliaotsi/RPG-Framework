/*
Deployment script for RPGFrameworkDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "RPGFrameworkDatabase"
:setvar DefaultFilePrefix "RPGFrameworkDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key f9001d55-a684-4b36-a962-783d24411943 is skipped, element [dbo].[Characters].[Dexterity] (SqlSimpleColumn) will not be renamed to Grit';


GO
PRINT N'Rename refactoring operation with key 867791b0-fd4f-4f5b-ad3d-9adaf86e5d8c is skipped, element [dbo].[Characters].[Humout] (SqlSimpleColumn) will not be renamed to Humour';


GO
PRINT N'Rename refactoring operation with key 2142fa18-de19-4b5e-887d-bb9f7295e4c1 is skipped, element [dbo].[Encounters].[Id] (SqlSimpleColumn) will not be renamed to EncounterId';


GO
PRINT N'Rename refactoring operation with key 562e4949-e4be-43e0-a79d-caeefc42449d is skipped, element [dbo].[Characters].[Id] (SqlSimpleColumn) will not be renamed to CharacterId';


GO
PRINT N'Rename refactoring operation with key 9a54a1a7-d503-4805-9c16-996393636b07 is skipped, element [dbo].[Combats].[Id] (SqlSimpleColumn) will not be renamed to CombatId';


GO
PRINT N'Creating [dbo].[Characters]...';


GO
CREATE TABLE [dbo].[Characters] (
    [CharacterId]         INT          NOT NULL,
    [Name]                VARCHAR (50) NOT NULL,
    [Class]               VARCHAR (50) NOT NULL,
    [Health]              INT          NOT NULL,
    [Spirit]              INT          NOT NULL,
    [Physical]            INT          NOT NULL,
    [Grit]                INT          NOT NULL,
    [Magick]              INT          NOT NULL,
    [Dexterity]           INT          NOT NULL,
    [Focus]               INT          NOT NULL,
    [PrimaryAttack]       INT          NOT NULL,
    [SecondaryAttack]     INT          NOT NULL,
    [PrimaryAttackType]   VARCHAR (50) NOT NULL,
    [SecondaryAttackType] VARCHAR (50) NOT NULL,
    [Gender]              VARCHAR (50) NOT NULL,
    [Humour]              VARCHAR (50) NULL,
    [LastAction]          VARCHAR (50) NOT NULL,
    [DamageTaken]         INT          NOT NULL,
    [Alive]               BIT          NOT NULL,
    [Encounter]           INT          NULL,
    PRIMARY KEY CLUSTERED ([CharacterId] ASC)
);


GO
PRINT N'Creating [dbo].[Combats]...';


GO
CREATE TABLE [dbo].[Combats] (
    [CombatId]        INT NOT NULL,
    [PlayerAdvantage] BIT NOT NULL,
    [Round]           INT NOT NULL,
    [PlayerTurn]      BIT NOT NULL,
    PRIMARY KEY CLUSTERED ([CombatId] ASC)
);


GO
PRINT N'Creating [dbo].[Encounters]...';


GO
CREATE TABLE [dbo].[Encounters] (
    [EncounterId] INT          NOT NULL,
    [Type]        VARCHAR (50) NULL,
    [PlayerCount] INT          NULL,
    [NpcCount]    INT          NULL,
    [Combat]      INT          NULL,
    PRIMARY KEY CLUSTERED ([EncounterId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Characters]...';


GO
ALTER TABLE [dbo].[Characters]
    ADD DEFAULT 'Newbie' FOR [Name];


GO
PRINT N'Creating unnamed constraint on [dbo].[Characters]...';


GO
ALTER TABLE [dbo].[Characters]
    ADD DEFAULT 0 FOR [DamageTaken];


GO
PRINT N'Creating unnamed constraint on [dbo].[Characters]...';


GO
ALTER TABLE [dbo].[Characters]
    ADD DEFAULT 1 FOR [Alive];


GO
PRINT N'Creating unnamed constraint on [dbo].[Combats]...';


GO
ALTER TABLE [dbo].[Combats]
    ADD DEFAULT 0 FOR [Round];


GO
PRINT N'Creating [dbo].[FK_Characters_Encounters]...';


GO
ALTER TABLE [dbo].[Characters] WITH NOCHECK
    ADD CONSTRAINT [FK_Characters_Encounters] FOREIGN KEY ([Encounter]) REFERENCES [dbo].[Encounters] ([EncounterId]);


GO
PRINT N'Creating [dbo].[FK_Encounters_Combats]...';


GO
ALTER TABLE [dbo].[Encounters] WITH NOCHECK
    ADD CONSTRAINT [FK_Encounters_Combats] FOREIGN KEY ([Combat]) REFERENCES [dbo].[Combats] ([CombatId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f9001d55-a684-4b36-a962-783d24411943')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f9001d55-a684-4b36-a962-783d24411943')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '867791b0-fd4f-4f5b-ad3d-9adaf86e5d8c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('867791b0-fd4f-4f5b-ad3d-9adaf86e5d8c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2142fa18-de19-4b5e-887d-bb9f7295e4c1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2142fa18-de19-4b5e-887d-bb9f7295e4c1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '562e4949-e4be-43e0-a79d-caeefc42449d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('562e4949-e4be-43e0-a79d-caeefc42449d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9a54a1a7-d503-4805-9c16-996393636b07')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9a54a1a7-d503-4805-9c16-996393636b07')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Characters] WITH CHECK CHECK CONSTRAINT [FK_Characters_Encounters];

ALTER TABLE [dbo].[Encounters] WITH CHECK CHECK CONSTRAINT [FK_Encounters_Combats];


GO
PRINT N'Update complete.';


GO
